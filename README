---------
my1imgpro
---------

Written by Azman M. Yusof (azman@my1matrix.net)

This is a simple image processing library (meant to support work on vision
@ video) that was written for personal use since 2006 (started as kimgpro).

This software consists of several small modules:
  * my1image      - basic image structure, pixel/image operations, color option
  * my1image_chsv - functions to convert rgb<->hsv
  * my1image_file - file load/save functions (BMP & PNM only)
  * my1image_util - basic region/mask@filter/histogram structure & utility
  * my1image_math - math-related function(s), matrix structure & operations
  * my1image_work - sample image processing filters
  * my1image_view - image viewer library using gtk
  * my1image_hist - histogram view for my1image_view
  * my1image_data - modular image application structure
  * my1image_test - main test program for my1image & friends
  * my1video      - video structure based on basic image structure
  * my1video_main - sample video processing flow (using libav & my1image_view)
  * my1video_test - main test program for my1video & friends

The my1image_view module requires gtk, while the my1video_main module requires
libav(ffmpeg).

Although my1imgpro library is meant for 8-bit grayscale processing, the
my1image_t structure can support color image using RGB-encoded integer
(assuming an integer is at least 32-bit).

See LICENSE for licensing details.

*Note*: The my1image_math module has no test codes... yet! I will put this in
when I have the time and idea :p

Supported file format
---------------------

By default, only 2 image file formats are supported (limited):
- BMP (gray & 24-bit RGB only)
- NetPBM@PNM Portable AnyMap (P1[bit|*.pbm]/P2[gray|*.pgm]/P3[pix|*.ppm] only)

An easy way to allow myimgpro uses an image is to use IMageMagick's convert:

- to get supported BMP, use 'convert image.file -compress none output.bmp'
- to get supported PNM, use 'convert image.file -compress none output.pnm'

A third format (PNG) is separated, but can easily be inserted into main code
when needed (e.g. see my1image_test.c and my1image_loader.c). This is simply
because the code is slightly cumbersome and may not be needed for simple
applications.

Sample application(s)
---------------------

Three sample applications: resizer, imgload and testhsv.

- resizer: application to demonstrate image resizing functions of my1imgpro
- imgload: loads and optionally save an image file into supported format AND
           C source code (targetting embedded application here).
- testhsv: application to test HSV color representation
